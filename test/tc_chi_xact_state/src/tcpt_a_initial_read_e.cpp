#include "tc_common_initial.hpp"            // IWYU pragma: keep
#include "tcpt_a_initial_read.hpp"          // IWYU pragma: keep

#ifdef CHI_ISSUE_E

void TCPtAInitialRead(
    size_t*                     totalCount,
    size_t*                     errCountFail,
    size_t*                     errCountEnvError,
    std::vector<std::string>*   errList,
    const Xact::Topology&       topo) noexcept
{
    TCPtInitial* tcptInitial = (new TCPtInitial())
        ->TotalCount(totalCount)
        ->ErrCountFail(errCountFail)
        ->ErrCountEnvError(errCountEnvError)
        ->ErrList(errList)
        ->Topology(topo)
        ->Begin();

    tcptInitial
        ->ForkREQ("# TCPt A.1. Initial state of ReadNoSnp", Opcodes::REQ::ReadNoSnp)
            
            ->ForkSilentTransitions("## A.1.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.1.1.1. UC  -> ReadNoSnp ", Xact::CacheStates::UC , false)
                ->Leaf("### A.1.1.2. UCE -> ReadNoSnp ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.1.1.3. UD  -> ReadNoSnp ", Xact::CacheStates::UD , false)
                ->Leaf("### A.1.1.4. UDP -> ReadNoSnp ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.1.1.5. SC  -> ReadNoSnp ", Xact::CacheStates::SC , false)
                ->Leaf("### A.1.1.6. SD  -> ReadNoSnp ", Xact::CacheStates::SD , false)
                ->Leaf("### A.1.1.7. I   -> ReadNoSnp ", Xact::CacheStates::I  , true )
            ->Rest()
            
            ->ForkSilentTransitions("## A.1.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, true, false)
                ->Leaf("### A.1.2.1. UC  -> ReadNoSnp ", Xact::CacheStates::UC , false)
                ->Leaf("### A.1.2.2. UCE -> ReadNoSnp ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.1.2.3. UD  -> ReadNoSnp ", Xact::CacheStates::UD , false)
                ->Leaf("### A.1.2.4. UDP -> ReadNoSnp ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.1.2.5. SC  -> ReadNoSnp ", Xact::CacheStates::SC , false)
                ->Leaf("### A.1.2.6. SD  -> ReadNoSnp ", Xact::CacheStates::SD , false)
                ->Leaf("### A.1.2.7. I   -> ReadNoSnp ", Xact::CacheStates::I  , true )
            ->Rest()
            
            ->ForkSilentTransitions("## A.1.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.1.3.1. UC  -> ReadNoSnp ", Xact::CacheStates::UC , true )
                ->Leaf("### A.1.3.2. UCE -> ReadNoSnp ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.1.3.3. UD  -> ReadNoSnp ", Xact::CacheStates::UD , false)
                ->Leaf("### A.1.3.4. UDP -> ReadNoSnp ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.1.3.5. SC  -> ReadNoSnp ", Xact::CacheStates::SC , true )
                ->Leaf("### A.1.3.6. SD  -> ReadNoSnp ", Xact::CacheStates::SD , false)
                ->Leaf("### A.1.3.7. I   -> ReadNoSnp ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.1.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.1.4.1. UC  -> ReadNoSnp ", Xact::CacheStates::UC , true )
                ->Leaf("### A.1.4.2. UCE -> ReadNoSnp ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.1.4.3. UD  -> ReadNoSnp ", Xact::CacheStates::UD , true )
                ->Leaf("### A.1.4.4. UDP -> ReadNoSnp ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.1.4.5. SC  -> ReadNoSnp ", Xact::CacheStates::SC , true )
                ->Leaf("### A.1.4.6. SD  -> ReadNoSnp ", Xact::CacheStates::SD , false)
                ->Leaf("### A.1.4.7. I   -> ReadNoSnp ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.1.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.1.5.1. UC  -> ReadNoSnp ", Xact::CacheStates::UC , true )
                ->Leaf("### A.1.5.2. UCE -> ReadNoSnp ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.1.5.3. UD  -> ReadNoSnp ", Xact::CacheStates::UD , true )
                ->Leaf("### A.1.5.4. UDP -> ReadNoSnp ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.1.5.5. SC  -> ReadNoSnp ", Xact::CacheStates::SC , true )
                ->Leaf("### A.1.5.6. SD  -> ReadNoSnp ", Xact::CacheStates::SD , false)
                ->Leaf("### A.1.5.7. I   -> ReadNoSnp ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.2. Initial state of ReadOnce", Opcodes::REQ::ReadOnce)

            ->ForkSilentTransitions("## A.2.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.2.1.1. UC  -> ReadOnce ", Xact::CacheStates::UC , false)
                ->Leaf("### A.2.1.2. UCE -> ReadOnce ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.2.1.3. UD  -> ReadOnce ", Xact::CacheStates::UD , false)
                ->Leaf("### A.2.1.4. UDP -> ReadOnce ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.2.1.5. SC  -> ReadOnce ", Xact::CacheStates::SC , false)
                ->Leaf("### A.2.1.6. SD  -> ReadOnce ", Xact::CacheStates::SD , false)
                ->Leaf("### A.2.1.7. I   -> ReadOnce ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.2.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.2.2.1. UC  -> ReadOnce ", Xact::CacheStates::UC , false)
                ->Leaf("### A.2.2.2. UCE -> ReadOnce ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.2.2.3. UD  -> ReadOnce ", Xact::CacheStates::UD , false)
                ->Leaf("### A.2.2.4. UDP -> ReadOnce ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.2.2.5. SC  -> ReadOnce ", Xact::CacheStates::SC , false)
                ->Leaf("### A.2.2.6. SD  -> ReadOnce ", Xact::CacheStates::SD , false)
                ->Leaf("### A.2.2.7. I   -> ReadOnce ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.2.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.2.3.1. UC  -> ReadOnce ", Xact::CacheStates::UC , true )
                ->Leaf("### A.2.3.2. UCE -> ReadOnce ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.2.3.3. UD  -> ReadOnce ", Xact::CacheStates::UD , false)
                ->Leaf("### A.2.3.4. UDP -> ReadOnce ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.2.3.5. SC  -> ReadOnce ", Xact::CacheStates::SC , true )
                ->Leaf("### A.2.3.6. SD  -> ReadOnce ", Xact::CacheStates::SD , false)
                ->Leaf("### A.2.3.7. I   -> ReadOnce ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.2.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.2.4.1. UC  -> ReadOnce ", Xact::CacheStates::UC , true )
                ->Leaf("### A.2.4.2. UCE -> ReadOnce ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.2.4.3. UD  -> ReadOnce ", Xact::CacheStates::UD , true )
                ->Leaf("### A.2.4.4. UDP -> ReadOnce ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.2.4.5. SC  -> ReadOnce ", Xact::CacheStates::SC , true )
                ->Leaf("### A.2.4.6. SD  -> ReadOnce ", Xact::CacheStates::SD , false)
                ->Leaf("### A.2.4.7. I   -> ReadOnce ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.2.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.2.5.1. UC  -> ReadOnce ", Xact::CacheStates::UC , true )
                ->Leaf("### A.2.5.2. UCE -> ReadOnce ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.2.5.3. UD  -> ReadOnce ", Xact::CacheStates::UD , true )
                ->Leaf("### A.2.5.4. UDP -> ReadOnce ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.2.5.5. SC  -> ReadOnce ", Xact::CacheStates::SC , true )
                ->Leaf("### A.2.5.6. SD  -> ReadOnce ", Xact::CacheStates::SD , false)
                ->Leaf("### A.2.5.7. I   -> ReadOnce ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.3. Initial state of ReadOnceCleanInvalid", Opcodes::REQ::ReadOnceCleanInvalid)

            ->ForkSilentTransitions("## A.3.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.3.1.1. UC  -> ReadOnceCleanInvalid ", Xact::CacheStates::UC , false)
                ->Leaf("### A.3.1.2. UCE -> ReadOnceCleanInvalid ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.3.1.3. UD  -> ReadOnceCleanInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.3.1.4. UDP -> ReadOnceCleanInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.3.1.5. SC  -> ReadOnceCleanInvalid ", Xact::CacheStates::SC , false)
                ->Leaf("### A.3.1.6. SD  -> ReadOnceCleanInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.3.1.7. I   -> ReadOnceCleanInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## 3.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.3.2.1. UC  -> ReadOnceCleanInvalid ", Xact::CacheStates::UC , false)
                ->Leaf("### A.3.2.2. UCE -> ReadOnceCleanInvalid ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.3.2.3. UD  -> ReadOnceCleanInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.3.2.4. UDP -> ReadOnceCleanInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.3.2.5. SC  -> ReadOnceCleanInvalid ", Xact::CacheStates::SC , false)
                ->Leaf("### A.3.2.6. SD  -> ReadOnceCleanInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.3.2.7. I   -> ReadOnceCleanInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## 3.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.3.3.1. UC  -> ReadOnceCleanInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.3.3.2. UCE -> ReadOnceCleanInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.3.3.3. UD  -> ReadOnceCleanInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.3.3.4. UDP -> ReadOnceCleanInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.3.3.5. SC  -> ReadOnceCleanInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.3.3.6. SD  -> ReadOnceCleanInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.3.3.7. I   -> ReadOnceCleanInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## 3.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.3.4.1. UC  -> ReadOnceCleanInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.3.4.2. UCE -> ReadOnceCleanInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.3.4.3. UD  -> ReadOnceCleanInvalid ", Xact::CacheStates::UD , true )
                ->Leaf("### A.3.4.4. UDP -> ReadOnceCleanInvalid ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.3.4.5. SC  -> ReadOnceCleanInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.3.4.6. SD  -> ReadOnceCleanInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.3.4.7. I   -> ReadOnceCleanInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## 3.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.3.5.1. UC  -> ReadOnceCleanInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.3.5.2. UCE -> ReadOnceCleanInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.3.5.3. UD  -> ReadOnceCleanInvalid ", Xact::CacheStates::UD , true )
                ->Leaf("### A.3.5.4. UDP -> ReadOnceCleanInvalid ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.3.5.5. SC  -> ReadOnceCleanInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.3.5.6. SD  -> ReadOnceCleanInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.3.5.7. I   -> ReadOnceCleanInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.4. Initial state of ReadOnceMakeInvalid", Opcodes::REQ::ReadOnceMakeInvalid)

            ->ForkSilentTransitions("## A.4.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.4.1.1. UC  -> ReadOnceMakeInvalid ", Xact::CacheStates::UC , false)
                ->Leaf("### A.4.1.2. UCE -> ReadOnceMakeInvalid ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.4.1.3. UD  -> ReadOnceMakeInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.4.1.4. UDP -> ReadOnceMakeInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.4.1.5. SC  -> ReadOnceMakeInvalid ", Xact::CacheStates::SC , false)
                ->Leaf("### A.4.1.6. SD  -> ReadOnceMakeInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.4.1.7. I   -> ReadOnceMakeInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.4.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.4.2.1. UC  -> ReadOnceMakeInvalid ", Xact::CacheStates::UC , false)
                ->Leaf("### A.4.2.2. UCE -> ReadOnceMakeInvalid ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.4.2.3. UD  -> ReadOnceMakeInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.4.2.4. UDP -> ReadOnceMakeInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.4.2.5. SC  -> ReadOnceMakeInvalid ", Xact::CacheStates::SC , false)
                ->Leaf("### A.4.2.6. SD  -> ReadOnceMakeInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.4.2.7. I   -> ReadOnceMakeInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.4.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.4.3.1. UC  -> ReadOnceMakeInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.4.3.2. UCE -> ReadOnceMakeInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.4.3.3. UD  -> ReadOnceMakeInvalid ", Xact::CacheStates::UD , false)
                ->Leaf("### A.4.3.4. UDP -> ReadOnceMakeInvalid ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.4.3.5. SC  -> ReadOnceMakeInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.4.3.6. SD  -> ReadOnceMakeInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.4.3.7. I   -> ReadOnceMakeInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.4.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.4.4.1. UC  -> ReadOnceMakeInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.4.4.2. UCE -> ReadOnceMakeInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.4.4.3. UD  -> ReadOnceMakeInvalid ", Xact::CacheStates::UD , true )
                ->Leaf("### A.4.4.4. UDP -> ReadOnceMakeInvalid ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.4.4.5. SC  -> ReadOnceMakeInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.4.4.6. SD  -> ReadOnceMakeInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.4.4.7. I   -> ReadOnceMakeInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.4.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.4.5.1. UC  -> ReadOnceMakeInvalid ", Xact::CacheStates::UC , true )
                ->Leaf("### A.4.5.2. UCE -> ReadOnceMakeInvalid ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.4.5.3. UD  -> ReadOnceMakeInvalid ", Xact::CacheStates::UD , true )
                ->Leaf("### A.4.5.4. UDP -> ReadOnceMakeInvalid ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.4.5.5. SC  -> ReadOnceMakeInvalid ", Xact::CacheStates::SC , true )
                ->Leaf("### A.4.5.6. SD  -> ReadOnceMakeInvalid ", Xact::CacheStates::SD , false)
                ->Leaf("### A.4.5.7. I   -> ReadOnceMakeInvalid ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.5. Initial state of ReadClean", Opcodes::REQ::ReadClean)

            ->ForkSilentTransitions("## A.5.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.5.1.1. UC  -> ReadClean ", Xact::CacheStates::UC , false)
                ->Leaf("### A.5.1.2. UCE -> ReadClean ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.5.1.3. UD  -> ReadClean ", Xact::CacheStates::UD , false)
                ->Leaf("### A.5.1.4. UDP -> ReadClean ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.5.1.5. SC  -> ReadClean ", Xact::CacheStates::SC , false)
                ->Leaf("### A.5.1.6. SD  -> ReadClean ", Xact::CacheStates::SD , false)
                ->Leaf("### A.5.1.7. I   -> ReadClean ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.5.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.5.2.1. UC  -> ReadClean ", Xact::CacheStates::UC , false)
                ->Leaf("### A.5.2.2. UCE -> ReadClean ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.5.2.3. UD  -> ReadClean ", Xact::CacheStates::UD , false)
                ->Leaf("### A.5.2.4. UDP -> ReadClean ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.5.2.5. SC  -> ReadClean ", Xact::CacheStates::SC , false)
                ->Leaf("### A.5.2.6. SD  -> ReadClean ", Xact::CacheStates::SD , false)
                ->Leaf("### A.5.2.7. I   -> ReadClean ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.5.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.5.3.1. UC  -> ReadClean ", Xact::CacheStates::UC , true )
                ->Leaf("### A.5.3.2. UCE -> ReadClean ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.5.3.3. UD  -> ReadClean ", Xact::CacheStates::UD , false)
                ->Leaf("### A.5.3.4. UDP -> ReadClean ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.5.3.5. SC  -> ReadClean ", Xact::CacheStates::SC , true )
                ->Leaf("### A.5.3.6. SD  -> ReadClean ", Xact::CacheStates::SD , false)
                ->Leaf("### A.5.3.7. I   -> ReadClean ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.5.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.5.4.1. UC  -> ReadClean ", Xact::CacheStates::UC , true )
                ->Leaf("### A.5.4.2. UCE -> ReadClean ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.5.4.3. UD  -> ReadClean ", Xact::CacheStates::UD , true )
                ->Leaf("### A.5.4.4. UDP -> ReadClean ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.5.4.5. SC  -> ReadClean ", Xact::CacheStates::SC , true )
                ->Leaf("### A.5.4.6. SD  -> ReadClean ", Xact::CacheStates::SD , false)
                ->Leaf("### A.5.4.7. I   -> ReadClean ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.5.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.5.5.1. UC  -> ReadClean ", Xact::CacheStates::UC , true )
                ->Leaf("### A.5.5.2. UCE -> ReadClean ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.5.5.3. UD  -> ReadClean ", Xact::CacheStates::UD , true )
                ->Leaf("### A.5.5.4. UDP -> ReadClean ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.5.5.5. SC  -> ReadClean ", Xact::CacheStates::SC , true )
                ->Leaf("### A.5.5.6. SD  -> ReadClean ", Xact::CacheStates::SD , false)
                ->Leaf("### A.5.5.7. I   -> ReadClean ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.6. Initial state of ReadNotSharedDirty", Opcodes::REQ::ReadNotSharedDirty)

            ->ForkSilentTransitions("## A.6.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.6.1.1. UC  -> ReadNotSharedDirty ", Xact::CacheStates::UC , false)
                ->Leaf("### A.6.1.2. UCE -> ReadNotSharedDirty ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.6.1.3. UD  -> ReadNotSharedDirty ", Xact::CacheStates::UD , false)
                ->Leaf("### A.6.1.4. UDP -> ReadNotSharedDirty ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.6.1.5. SC  -> ReadNotSharedDirty ", Xact::CacheStates::SC , false)
                ->Leaf("### A.6.1.6. SD  -> ReadNotSharedDirty ", Xact::CacheStates::SD , false)
                ->Leaf("### A.6.1.7. I   -> ReadNotSharedDirty ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.6.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.6.2.1. UC  -> ReadNotSharedDirty ", Xact::CacheStates::UC , false)
                ->Leaf("### A.6.2.2. UCE -> ReadNotSharedDirty ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.6.2.3. UD  -> ReadNotSharedDirty ", Xact::CacheStates::UD , false)
                ->Leaf("### A.6.2.4. UDP -> ReadNotSharedDirty ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.6.2.5. SC  -> ReadNotSharedDirty ", Xact::CacheStates::SC , false)
                ->Leaf("### A.6.2.6. SD  -> ReadNotSharedDirty ", Xact::CacheStates::SD , false)
                ->Leaf("### A.6.2.7. I   -> ReadNotSharedDirty ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.6.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.6.3.1. UC  -> ReadNotSharedDirty ", Xact::CacheStates::UC , true )
                ->Leaf("### A.6.3.2. UCE -> ReadNotSharedDirty ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.6.3.3. UD  -> ReadNotSharedDirty ", Xact::CacheStates::UD , false)
                ->Leaf("### A.6.3.4. UDP -> ReadNotSharedDirty ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.6.3.5. SC  -> ReadNotSharedDirty ", Xact::CacheStates::SC , true )
                ->Leaf("### A.6.3.6. SD  -> ReadNotSharedDirty ", Xact::CacheStates::SD , false)
                ->Leaf("### A.6.3.7. I   -> ReadNotSharedDirty ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.6.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.6.4.1. UC  -> ReadNotSharedDirty ", Xact::CacheStates::UC , true )
                ->Leaf("### A.6.4.2. UCE -> ReadNotSharedDirty ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.6.4.3. UD  -> ReadNotSharedDirty ", Xact::CacheStates::UD , true )
                ->Leaf("### A.6.4.4. UDP -> ReadNotSharedDirty ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.6.4.5. SC  -> ReadNotSharedDirty ", Xact::CacheStates::SC , true )
                ->Leaf("### A.6.4.6. SD  -> ReadNotSharedDirty ", Xact::CacheStates::SD , false)
                ->Leaf("### A.6.4.7. I   -> ReadNotSharedDirty ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.6.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.6.5.1. UC  -> ReadNotSharedDirty ", Xact::CacheStates::UC , true )
                ->Leaf("### A.6.5.2. UCE -> ReadNotSharedDirty ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.6.5.3. UD  -> ReadNotSharedDirty ", Xact::CacheStates::UD , true )
                ->Leaf("### A.6.5.4. UDP -> ReadNotSharedDirty ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.6.5.5. SC  -> ReadNotSharedDirty ", Xact::CacheStates::SC , true )
                ->Leaf("### A.6.5.6. SD  -> ReadNotSharedDirty ", Xact::CacheStates::SD , false)
                ->Leaf("### A.6.5.7. I   -> ReadNotSharedDirty ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.7. Initial state of ReadShared", Opcodes::REQ::ReadShared)

            ->ForkSilentTransitions("## A.7.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.7.1.1. UC  -> ReadShared ", Xact::CacheStates::UC , false)
                ->Leaf("### A.7.1.2. UCE -> ReadShared ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.7.1.3. UD  -> ReadShared ", Xact::CacheStates::UD , false)
                ->Leaf("### A.7.1.4. UDP -> ReadShared ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.7.1.5. SC  -> ReadShared ", Xact::CacheStates::SC , false)
                ->Leaf("### A.7.1.6. SD  -> ReadShared ", Xact::CacheStates::SD , false)
                ->Leaf("### A.7.1.7. I   -> ReadShared ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.7.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.7.2.1. UC  -> ReadShared ", Xact::CacheStates::UC , false)
                ->Leaf("### A.7.2.2. UCE -> ReadShared ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.7.2.3. UD  -> ReadShared ", Xact::CacheStates::UD , false)
                ->Leaf("### A.7.2.4. UDP -> ReadShared ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.7.2.5. SC  -> ReadShared ", Xact::CacheStates::SC , false)
                ->Leaf("### A.7.2.6. SD  -> ReadShared ", Xact::CacheStates::SD , false)
                ->Leaf("### A.7.2.7. I   -> ReadShared ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.7.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.7.3.1. UC  -> ReadShared ", Xact::CacheStates::UC , true )
                ->Leaf("### A.7.3.2. UCE -> ReadShared ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.7.3.3. UD  -> ReadShared ", Xact::CacheStates::UD , false)
                ->Leaf("### A.7.3.4. UDP -> ReadShared ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.7.3.5. SC  -> ReadShared ", Xact::CacheStates::SC , true )
                ->Leaf("### A.7.3.6. SD  -> ReadShared ", Xact::CacheStates::SD , false)
                ->Leaf("### A.7.3.7. I   -> ReadShared ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.7.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.7.4.1. UC  -> ReadShared ", Xact::CacheStates::UC , true )
                ->Leaf("### A.7.4.2. UCE -> ReadShared ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.7.4.3. UD  -> ReadShared ", Xact::CacheStates::UD , true )
                ->Leaf("### A.7.4.4. UDP -> ReadShared ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.7.4.5. SC  -> ReadShared ", Xact::CacheStates::SC , true )
                ->Leaf("### A.7.4.6. SD  -> ReadShared ", Xact::CacheStates::SD , false)
                ->Leaf("### A.7.4.7. I   -> ReadShared ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.7.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.7.5.1. UC  -> ReadShared ", Xact::CacheStates::UC , true )
                ->Leaf("### A.7.5.2. UCE -> ReadShared ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.7.5.3. UD  -> ReadShared ", Xact::CacheStates::UD , true )
                ->Leaf("### A.7.5.4. UDP -> ReadShared ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.7.5.5. SC  -> ReadShared ", Xact::CacheStates::SC , true )
                ->Leaf("### A.7.5.6. SD  -> ReadShared ", Xact::CacheStates::SD , false)
                ->Leaf("### A.7.5.7. I   -> ReadShared ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.8. Initial state of ReadUnique", Opcodes::REQ::ReadUnique)

            ->ForkSilentTransitions("## A.8.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.8.1.1. UC  -> ReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.8.1.2. UCE -> ReadUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.8.1.3. UD  -> ReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.8.1.4. UDP -> ReadUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.8.1.5. SC  -> ReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.8.1.6. SD  -> ReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.8.1.7. I   -> ReadUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.8.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.8.2.1. UC  -> ReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.8.2.2. UCE -> ReadUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.8.2.3. UD  -> ReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.8.2.4. UDP -> ReadUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.8.2.5. SC  -> ReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.8.2.6. SD  -> ReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.8.2.7. I   -> ReadUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.8.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.8.3.1. UC  -> ReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.8.3.2. UCE -> ReadUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.8.3.3. UD  -> ReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.8.3.4. UDP -> ReadUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.8.3.5. SC  -> ReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.8.3.6. SD  -> ReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.8.3.7. I   -> ReadUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.8.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.8.4.1. UC  -> ReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.8.4.2. UCE -> ReadUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.8.4.3. UD  -> ReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.8.4.4. UDP -> ReadUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.8.4.5. SC  -> ReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.8.4.6. SD  -> ReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.8.4.7. I   -> ReadUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.8.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.8.5.1. UC  -> ReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.8.5.2. UCE -> ReadUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.8.5.3. UD  -> ReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.8.5.4. UDP -> ReadUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.8.5.5. SC  -> ReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.8.5.6. SD  -> ReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.8.5.7. I   -> ReadUnique ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();

    tcptInitial
        ->ForkREQ("# TCPt A.9. Initial state of ReadPreferUnique", Opcodes::REQ::ReadPreferUnique)

            ->ForkSilentTransitions("## A.9.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.9.1.1. UC  -> ReadPreferUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.9.1.2. UCE -> ReadPreferUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.9.1.3. UD  -> ReadPreferUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.9.1.4. UDP -> ReadPreferUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.9.1.5. SC  -> ReadPreferUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.9.1.6. SD  -> ReadPreferUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.9.1.7. I   -> ReadPreferUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.9.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.9.2.1. UC  -> ReadPreferUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.9.2.2. UCE -> ReadPreferUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.9.2.3. UD  -> ReadPreferUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.9.2.4. UDP -> ReadPreferUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.9.2.5. SC  -> ReadPreferUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.9.2.6. SD  -> ReadPreferUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.9.2.7. I   -> ReadPreferUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.9.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.9.3.1. UC  -> ReadPreferUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.9.3.2. UCE -> ReadPreferUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.9.3.3. UD  -> ReadPreferUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.9.3.4. UDP -> ReadPreferUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.9.3.5. SC  -> ReadPreferUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.9.3.6. SD  -> ReadPreferUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.9.3.7. I   -> ReadPreferUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.9.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.9.4.1. UC  -> ReadPreferUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.9.4.2. UCE -> ReadPreferUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.9.4.3. UD  -> ReadPreferUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.9.4.4. UDP -> ReadPreferUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.9.4.5. SC  -> ReadPreferUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.9.4.6. SD  -> ReadPreferUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.9.4.7. I   -> ReadPreferUnique ", Xact::CacheStates::I  , true )
            ->Rest()

            ->ForkSilentTransitions("## A.9.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.9.5.1. UC  -> ReadPreferUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.9.5.2. UCE -> ReadPreferUnique ", Xact::CacheStates::UCE, true )
                ->Leaf("### A.9.5.3. UD  -> ReadPreferUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.9.5.4. UDP -> ReadPreferUnique ", Xact::CacheStates::UDP, true )
                ->Leaf("### A.9.5.5. SC  -> ReadPreferUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.9.5.6. SD  -> ReadPreferUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.9.5.7. I   -> ReadPreferUnique ", Xact::CacheStates::I  , true )
            ->Rest()

        ->End();
        
    tcptInitial
        ->ForkREQ("# TCPt A.10. Initial state of MakeReadUnique", Opcodes::REQ::MakeReadUnique)

            ->ForkSilentTransitions("## A.10.1. Silent transitions: (Eviction = 0, Sharing = 0, Store = 0, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.10.1.1. UC  -> MakeReadUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.10.1.2. UCE -> MakeReadUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.10.1.3. UD  -> MakeReadUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.10.1.4. UDP -> MakeReadUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.10.1.5. SC  -> MakeReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.10.1.6. SD  -> MakeReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.10.1.7. I   -> MakeReadUnique ", Xact::CacheStates::I  , false)
            ->Rest()

            ->ForkSilentTransitions("## A.10.2. Silent transitions: (Eviction = 0, Sharing = 0, Store = 1, Invalidation = 0)", false, false, false, false)
                ->Leaf("### A.10.2.1. UC  -> MakeReadUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.10.2.2. UCE -> MakeReadUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.10.2.3. UD  -> MakeReadUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.10.2.4. UDP -> MakeReadUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.10.2.5. SC  -> MakeReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.10.2.6. SD  -> MakeReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.10.2.7. I   -> MakeReadUnique ", Xact::CacheStates::I  , false)
            ->Rest()

            ->ForkSilentTransitions("## A.10.3. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 0)", true, false, true, false)
                ->Leaf("### A.10.3.1. UC  -> MakeReadUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.10.3.2. UCE -> MakeReadUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.10.3.3. UD  -> MakeReadUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.10.3.4. UDP -> MakeReadUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.10.3.5. SC  -> MakeReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.10.3.6. SD  -> MakeReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.10.3.7. I   -> MakeReadUnique ", Xact::CacheStates::I  , false)
            ->Rest()

            ->ForkSilentTransitions("## A.10.4. Silent transitions: (Eviction = 1, Sharing = 0, Store = 1, Invalidation = 1)", true, false, true, true)
                ->Leaf("### A.10.4.1. UC  -> MakeReadUnique ", Xact::CacheStates::UC , false)
                ->Leaf("### A.10.4.2. UCE -> MakeReadUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.10.4.3. UD  -> MakeReadUnique ", Xact::CacheStates::UD , false)
                ->Leaf("### A.10.4.4. UDP -> MakeReadUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.10.4.5. SC  -> MakeReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.10.4.6. SD  -> MakeReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.10.4.7. I   -> MakeReadUnique ", Xact::CacheStates::I  , false)
            ->Rest()

            ->ForkSilentTransitions("## A.10.5. Silent transitions: (Eviction = 1, Sharing = 1, Store = 1, Invalidation = 1)", true, true, true, true)
                ->Leaf("### A.10.5.1. UC  -> MakeReadUnique ", Xact::CacheStates::UC , true )
                ->Leaf("### A.10.5.2. UCE -> MakeReadUnique ", Xact::CacheStates::UCE, false)
                ->Leaf("### A.10.5.3. UD  -> MakeReadUnique ", Xact::CacheStates::UD , true )
                ->Leaf("### A.10.5.4. UDP -> MakeReadUnique ", Xact::CacheStates::UDP, false)
                ->Leaf("### A.10.5.5. SC  -> MakeReadUnique ", Xact::CacheStates::SC , true )
                ->Leaf("### A.10.5.6. SD  -> MakeReadUnique ", Xact::CacheStates::SD , true )
                ->Leaf("### A.10.5.7. I   -> MakeReadUnique ", Xact::CacheStates::I  , false)
            ->Rest()

        ->End();

    tcptInitial->End();
    tcptInitial = nullptr;
}

#endif
